package com.hsw.model;
// Generated 12.10.2015 15:58:50 by Hibernate Tools 4.0.0

import java.util.HashSet;
import java.util.Set;
import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Ticket generated by hbm2java
 */
@Entity
@Table(name = "ticket", catalog = "ticketverwaltung")
public class Ticket implements java.io.Serializable {

	private TicketId id;
	private Project project;
	private StatusTyp statusTyp;
	private User userByTicketIssuer;
	private User userByTicketAuthor;
	private String ticketName;
	private String ticketDesc;
	private int ticketPrioritaet;
	private Set<Comment> comments = new HashSet<Comment>(0);
	private Set<TicketTag> ticketTags = new HashSet<TicketTag>(0);

	public Ticket() {
	}

	public Ticket(TicketId id, Project project, StatusTyp statusTyp, User userByTicketAuthor, String ticketName,
			int ticketPriorität) {
		this.id = id;
		this.project = project;
		this.statusTyp = statusTyp;
		this.userByTicketAuthor = userByTicketAuthor;
		this.ticketName = ticketName;
		this.ticketPrioritaet = ticketPriorität;
	}

	public Ticket(TicketId id, Project project, StatusTyp statusTyp, User userByTicketIssuer, User userByTicketAuthor,
			String ticketName, String ticketDesc, int ticketPriorität, Set<Comment> comments,
			Set<TicketTag> ticketTags) {
		this.id = id;
		this.project = project;
		this.statusTyp = statusTyp;
		this.userByTicketIssuer = userByTicketIssuer;
		this.userByTicketAuthor = userByTicketAuthor;
		this.ticketName = ticketName;
		this.ticketDesc = ticketDesc;
		this.ticketPrioritaet = ticketPriorität;
		this.comments = comments;
		this.ticketTags = ticketTags;
	}

	@EmbeddedId

	@AttributeOverrides({
			@AttributeOverride(name = "projectCode", column = @Column(name = "project_code", nullable = false, length = 5) ),
			@AttributeOverride(name = "ticketId", column = @Column(name = "Ticket_ID", nullable = false) ) })
	public TicketId getId() {
		return this.id;
	}

	public void setId(TicketId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "project_code", nullable = false, insertable = false, updatable = false)
	public Project getProject() {
		return this.project;
	}

	public void setProject(Project project) {
		this.project = project;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "Ticket_Status", nullable = false)
	public StatusTyp getStatusTyp() {
		return this.statusTyp;
	}

	public void setStatusTyp(StatusTyp statusTyp) {
		this.statusTyp = statusTyp;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "Ticket_Issuer")
	public User getUserByTicketIssuer() {
		return this.userByTicketIssuer;
	}

	public void setUserByTicketIssuer(User userByTicketIssuer) {
		this.userByTicketIssuer = userByTicketIssuer;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "Ticket_Author", nullable = false)
	public User getUserByTicketAuthor() {
		return this.userByTicketAuthor;
	}

	public void setUserByTicketAuthor(User userByTicketAuthor) {
		this.userByTicketAuthor = userByTicketAuthor;
	}

	@Column(name = "Ticket_Name", nullable = false, length = 40)
	public String getTicketName() {
		return this.ticketName;
	}

	public void setTicketName(String ticketName) {
		this.ticketName = ticketName;
	}

	@Column(name = "Ticket_Desc", length = 200)
	public String getTicketDesc() {
		return this.ticketDesc;
	}

	public void setTicketDesc(String ticketDesc) {
		this.ticketDesc = ticketDesc;
	}

	@Column(name = "Ticket_Prioritaet", nullable = false)
	public int getTicketPrioritaet() {
		return this.ticketPrioritaet;
	}

	public void setTicketPrioritaet(int ticketPriorität) {
		this.ticketPrioritaet = ticketPriorität;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "ticket")
	public Set<Comment> getComments() {
		return this.comments;
	}

	public void setComments(Set<Comment> comments) {
		this.comments = comments;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "ticket")
	public Set<TicketTag> getTicketTags() {
		return this.ticketTags;
	}

	public void setTicketTags(Set<TicketTag> ticketTags) {
		this.ticketTags = ticketTags;
	}

}
